{"version":3,"file":"static/js/612.4c821e48.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ButtonLarge/ButtonLarge.module.scss?1c7d","components/ButtonLarge/ButtonLarge.jsx","webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.scss?a3ad","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Heading/Heading.module.scss?1460","components/Heading/Heading.jsx","webpack://react-homework-template/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Paragraph/Paragraph.module.scss?0b87","components/Paragraph/Paragraph.jsx","webpack://react-homework-template/./src/components/FormRegister/FormRegister.module.scss?acdd","components/FormRegister/FormRegister.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonLarge_button__efBbg\"};","import css from './ButtonLarge.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ButtonLarge = function ({ type, text, handler, children }) {\n  return (\n    <button className={css.button} type={type} onClick={handler}>\n      {children}\n      {text}\n    </button>\n  );\n};\n\nButtonLarge.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit']).isRequired,\n  text: PropTypes.string.isRequired,\n  handler: PropTypes.func,\n};\n\nexport default ButtonLarge;\n","// extracted by mini-css-extract-plugin\nexport default {\"error-thumb\":\"ErrorMessage_error-thumb__Idhqd\",\"error-message\":\"ErrorMessage_error-message__OpG+f\"};","import css from './ErrorMessage.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = function ({ message }) {\n  return (\n    <div className={css['error-thumb']}>\n      <p className={css['error-message']}>{message}</p>\n    </div>\n  );\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Heading_title__KZlGj\"};","import css from './Heading.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Heading = function ({ tag, text }) {\n  const Tag = tag || 'h1';\n\n  return <Tag className={css.title}>{text}</Tag>;\n};\n\nHeading.propTypes = {\n  tag: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__U9NhE\",\"input\":\"Input_input__k5Ctk\"};","import css from './Input.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Input = function ({\n  label,\n  type,\n  name,\n  value,\n  handler,\n  pattern,\n  title,\n  required,\n}) {\n  return (\n    <label className={css.label}>\n      {label}\n      <input\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        onChange={handler}\n        pattern={pattern}\n        title={title}\n        required={required}\n      />\n    </label>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'tel', 'email', 'password']).isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool.isRequired,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader-thumb\":\"Loader_loader-thumb__fhQxX\"};","import css from './Loader.module.scss';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = function () {\n  return (\n    <div className={css['loader-thumb']}>\n      <RotatingLines\n        strokeColor=\"#FFA500\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Paragraph_text__GDJYo\"};","import css from './Paragraph.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Paragraph = function ({ text }) {\n  return <p className={css.text}>{text}</p>;\n};\n\nParagraph.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Paragraph;\n","// extracted by mini-css-extract-plugin\nexport default {\"register-form\":\"FormRegister_register-form__+2sXf\"};","import { useState } from 'react';\nimport css from './FormRegister.module.scss';\nimport Input from 'components/Input/Input';\nimport ButtonLarge from 'components/ButtonLarge/ButtonLarge';\nimport { useDispatch } from 'react-redux';\nimport { registerUserThunk } from 'redux/auth/authThunks';\nimport PropTypes from 'prop-types';\n\nconst FormRegister = function ({ handlerPassError }) {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [reEnteredPassword, setReEnteredPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handlerInputChange = event => {\n    if (event.target.name === 'name') {\n      setUserName(event.target.value);\n    }\n    if (event.target.name === 'email') {\n      setEmail(event.target.value);\n    }\n    if (event.target.name === 'password') {\n      setPassword(event.target.value);\n    }\n    if (event.target.name === 're-entered-password') {\n      setReEnteredPassword(event.target.value);\n    }\n  };\n\n  const handlerSubmitForm = event => {\n    event.preventDefault();\n    handlerPassError('');\n    if (password !== reEnteredPassword) {\n      handlerPassError(\n        `Your re-entered password \"${reEnteredPassword}\" is not correct`\n      );\n      return;\n    }\n    const newUser = {\n      name: userName,\n      email,\n      password,\n    };\n    dispatch(registerUserThunk(newUser));\n    setUserName('');\n    setEmail('');\n    setPassword('');\n    setReEnteredPassword('');\n  };\n\n  return (\n    <form className={css['register-form']} onSubmit={handlerSubmitForm}>\n      <Input\n        label=\"User Name\"\n        type=\"text\"\n        name=\"name\"\n        value={userName}\n        handler={handlerInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required={true}\n      />\n      <Input\n        label=\"E-mail\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        handler={handlerInputChange}\n        required={true}\n      />\n      <Input\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        handler={handlerInputChange}\n        required={true}\n      />\n      <Input\n        label=\"Re-enter password\"\n        type=\"password\"\n        name=\"re-entered-password\"\n        value={reEnteredPassword}\n        handler={handlerInputChange}\n        required={true}\n      />\n      <ButtonLarge type=\"submit\" text=\"Create an Account\" />\n    </form>\n  );\n};\n\nFormRegister.propTypes = {\n  handlerPassError: PropTypes.func.isRequired,\n};\n\nexport default FormRegister;\n","import ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport FormRegister from \"components/FormRegister/FormRegister\";\nimport Heading from \"components/Heading/Heading\";\nimport Loader from \"components/Loader/Loader\";\nimport Paragraph from \"components/Paragraph/Paragraph\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isLoadingSelector, errorSelector } from \"redux/auth/authSelectors\";\n\nconst RegisterPage = function () {\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n\n  const [passwordError, setPasswordError] = useState('');\n\n\n  \n  return (\n    <>\n      <Heading text='Sign Up'/>      \n      <Paragraph text='Register form'/>\n      <FormRegister handlerPassError={setPasswordError}/>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {passwordError && <ErrorMessage message={passwordError} />}\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["type","text","handler","children","className","css","onClick","message","tag","Tag","label","name","value","pattern","title","required","onChange","strokeColor","strokeWidth","animationDuration","width","visible","handlerPassError","useState","userName","setUserName","email","setEmail","password","setPassword","reEnteredPassword","setReEnteredPassword","dispatch","useDispatch","handlerInputChange","event","target","onSubmit","preventDefault","newUser","registerUserThunk","Input","ButtonLarge","isLoading","useSelector","isLoadingSelector","error","errorSelector","passwordError","setPasswordError","Heading","Paragraph","Loader","ErrorMessage"],"sourceRoot":""}